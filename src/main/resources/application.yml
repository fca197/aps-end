server:
  netty:
    connectionTimeout: 3000
  port: 80
  servlet:
    context-path: /api/peanut
  http2:
    enabled: true
  tomcat:
    threads:
      min-spare: 1
      max: 300
peanut:
  default-use-app-name: aps
  mock:
    enable: false
  match:
    passenger:
      enable: true
    driver:
      enable: true
  url-white-list:
    - /loginAccount/login/phone/pwd
    - /h2-console
    - /fileUpload/getFileByte/
    - /actuator
    - /apsGoodsSaleProjectConfig/sale2project
    - /districtCode
    - /test/flow
    - /camunda
    - /basePreview/info
    - /apsSchedulingDayConfigVersionDetailMachine/exportQueryPageList
  #    - /
  #    - /uber/h3/geoToH3Address
  redis-key:
    user-token: ut_
    login-lock: ll_
  entity-package-name: com.olivia.peanut.portal.model
  scan-property2-use-in-time-second: 60
  sale2-project-thread-size: 3
  aps:
    forecast-main-prefix: MAIN-
    forecast-main-suffix: 预测数据
  orderStatusUpdateNeedDayCount: 60
  # 钉钉配置， 不接入可不配置
  ding-config-list:
    - ding-code: msgNotice
      ding-name: 消息通知
      app-id: 3126584161
      client-id: dingAppClientId
      robot-code: dingAppKey
      client-secret: dingAppSecret
      agent-id: dingAppId
      use-stream: true
  # 钉钉配置， 不接入可不配置
  server-notice-user-id-map:
    common:
      - 1
    start:
      - 1
    end:
      - 1
  filter-table-list: # 数据条件过滤， 不配置则不区分数据，支持单值，多值匹配
    - column-name: tenant_id
      one-filter-value: true
      data-permission-type: tenant_id
      ignore-path: # 先验证 , 支持通配符，oneFilterValue=true配置表名 ，=false配置mapperId
        - t_district_code
        - base_resource
        - base_table_header
        - t_file_upload
        - t_login_account
        - t_tenant_info

      filter-path: # 后验证
        - /

db:
  url: jdbc:mysql://localhost:3306/peanut_prod?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&allowMultiQueries=true&autoReconnect=true&rewriteBatchedStatements=true
  username: root
  password: root
  mysql-driver: com.mysql.cj.jdbc.Driver
  data-source-type: com.zaxxer.hikari.HikariDataSource


spring:

  shardingsphere:
    datasource:
      # 默认数据源
      sharding:
        default-data-source-name: db_master
      names: db_master,db_0,db_1
      db_master:
        type: ${db.data-source-type}
        driver-class-name: ${db.mysql-driver}
        jdbc-url: ${db.url}
        username: ${db.username}
        password: ${db.password}
      db_0:
        type: ${db.data-source-type}
        driver-class-name: ${db.mysql-driver}
        jdbc-url: ${db.url}
        username: ${db.username}
        password: ${db.password}
      db_1:
        type: ${db.data-source-type}
        driver-class-name: ${db.mysql-driver}
        jdbc-url: ${db.url}
        username: ${db.username}
        password: ${db.password}
    rules:

      sharding:
        auditors:
          mustHasShardingId:
            type: DML_SHARDING_CONDITIONS
        tables:
          aps_rolling_forecast_order_item:
            actual-data-nodes: db_${0..1}.aps_rolling_forecast_order_item_${0..1}
            database-strategy:
              standard:
                sharding-column: forecast_id
                sharding-algorithm-name: aps_database_inline_forecast_id
            table-strategy:
              standard:
                sharding-column: forecast_id
                sharding-algorithm-name: aps_rolling_forecast_order_item_alg
          aps_goods_bom_buy_plan_item:
            actual-data-nodes: db_${0..1}.aps_goods_bom_buy_plan_item_${0..2}
            database-strategy:
              standard:
                sharding-column: buy_plan_id
                sharding-algorithm-name: aps_database_inline_plan_id
            table-strategy:
              standard:
                sharding-column: buy_plan_id
                sharding-algorithm-name: aps_goods_bom_buy_plan_item_alg
          aps_order_goods_status_date:
            actual-data-nodes: db_${0..1}.aps_order_goods_status_date_${0..2}
            database-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: aps_database_inline_order_id
            table-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: aps_order_goods_status_date_algorithm
          aps_order_goods_project_config:
            actual-data-nodes: db_${0..1}.aps_order_goods_project_config_${0..2}
            database-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: aps_database_inline_order_id
            table-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: aps_order_goods_project_config_algorithm

          aps_order_goods_sale_config:
            actual-data-nodes: db_${0..1}.aps_order_goods_sale_config_${0..2}
            database-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: aps_database_inline_order_id
            table-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: aps_order_goods_sale_config_algorithm
          aps_order_goods_bom:
            actual-data-nodes: db_${0..1}.aps_order_goods_bom_${0..2}
            # aps_order_goods_bom库路由
            database-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: aps_database_inline_order_id
            # aps_order_goods_bom表路由
            table-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: aps_order_goods_bom_algorithm
            audit-strategy:
              auditor-names:
                mustHasShardingId

          aps_scheduling_goods_bom:
            actual-data-nodes: db_${0..1}.aps_scheduling_goods_bom_${0..2}
            database-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: aps_database_inline_order_id
            table-strategy:
              standard:
                sharding-column: order_id
                sharding-algorithm-name: aps_scheduling_goods_bom_algorithm
        #            audit-strategy:
        #              auditor-names:
        #                mustHasShardingId


        sharding-algorithms:
          # aps_order_goods_bom库路由算法
          aps_database_inline_order_id:
            type: INLINE
            props:
              algorithm-expression: db_${order_id % 1}

          aps_database_inline_forecast_id:
            type: INLINE
            props:
              algorithm-expression: db_${forecast_id % 1}

          aps_database_inline_plan_id:
            type: INLINE
            props:
              algorithm-expression: db_${plan_id % 1}

          aps_rolling_forecast_order_item_alg:
            type: INLINE
            props:
              algorithm-expression: aps_rolling_forecast_order_item_${forecast_id % 1}


          aps_goods_bom_buy_plan_item_alg:
            type: INLINE
            props:
              algorithm-expression: aps_goods_bom_buy_plan_item_${buy_plan_id % 1}

          aps_order_goods_status_date_algorithm:
            type: INLINE
            props:
              algorithm-expression: aps_order_goods_status_date_${order_id % 1}

          aps_order_goods_project_config_algorithm:
            type: INLINE
            props:
              algorithm-expression: aps_order_goods_project_config_${order_id % 1}

          aps_order_goods_bom_algorithm:
            type: INLINE
            props:
              algorithm-expression: aps_order_goods_bom_${order_id % 1}

          aps_scheduling_goods_bom_algorithm:
            type: INLINE
            props:
              algorithm-expression: aps_scheduling_goods_bom_${order_id % 1}


          aps_order_goods_sale_config_algorithm:
            type: INLINE
            props:
              algorithm-expression: aps_order_goods_sale_config_${order_id % 1}
        default-audit-strategy:
          auditor-names:
            - mustHasShardingId

    props:
      sql-show: true
      sql-comment-parse-enabled: true


  application:
    name: peanut-api
  servlet:
    multipart:
      max-request-size: 5MB # 上传最大值
      max-file-size: 5MB  # 单个文件最大值
  profiles:
    active: local
  banner:
    location: banner.txt
  datasource:
    hikari:
      #      data-source-properties:
      #        cachePrepStmts: true
      #        prepStmtCacheSize: 250
      #        prepStmtCacheSqlLimit: 2048
      #        useServerPrepStmts: true
      #最大连接数，小于等于0会被重置为默认值10；大于零小于1会被重置为minimum-idle的值
      maximum-pool-size: 30
      #最小空闲连接，默认值 10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
      minimum-idle: 30
      #连接超时时间:毫秒，小于250毫秒，否则被重置为默认值30秒
      connection-timeout: 60000
      #空闲连接超时时间，默认值600000ms（10分钟），大于等于max-lifetime且max-lifetime>0，会被重置为0；
      #不等于0且小于10秒，会被重置为10秒。
      #只有空闲连接数大于最大连接数且空闲时间超过该值，才会被释放(自动释放过期链接)
      idle-timeout: 600000
      #连接最大存活时间.不等于0且小于30秒，会被重置为默认值30分钟.设置应该比mysql设置的超时时间短
      max-lifetime: 640000
      #连接测试查询
      connection-test-query: select 1
      connection-init-sql: select 2
      keepalive-time: 30000
      validation-timeout: 3000
      wait-timeout: 3000
      unitTest: true
      leakDetectionThreshold: 30000


    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://local:3306/peanut_prod?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&allowMultiQueries=true&autoReconnect=true&rewriteBatchedStatements=true
    username: root
    password: 123456
    type: com.zaxxer.hikari.HikariDataSource

  #  redis:
  #    redisson:
  #      file: classpath:redisson.yml
  data:
    redis:
      database: 3
      host: redis.com
      password: admin!@#q123
      port: 6379
      jedis:
        pool:
          max-idle: 20
          min-idle: 20


mybatis-plus:
  mapper-locations: classpath:/mapper/*.xml,classpath:/mapper/*/*.xml  # 指定 MyBatis Mapper XML 文件的位置
  type-aliases-package: com.olivia.peanut.*.model  # 指定实体类所在包名


logging:
  level:
    root: info
    #    org.springframework: trace
    "org.springframework.jdbc.core": debug
    "org.apache.ibatis.logging.jdbc": debug
#    com.olivia.peanut.aps.utils.forecast: error
    com.olivia.peanut.sdk: info
#    com.zaxxer.hikari: trace


#camunda:
#  bpm:
#    # 是否开启
#    enabled: false
#    auto-deployment-enabled: true
#    admin-user:
#      id: demo
#      # admin 账户必须修改
#      password: demo
#      firstName: Demo
#    webapp:
#      enabled: true
#      index-redirect-enabled: true
